//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DHQR.DataAccess.Entities
{
    [DataContract(IsReference = true)]
    public partial class LdmDist: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region 基元属性
    
        [DataMember]
        public System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("属性“Id”是对象键的一部分，不可更改。仅当未跟踪对象或对象处于“已添加”状态时，才能对键属性进行更改。");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private System.Guid _id;
    
        [DataMember]
        public string DIST_NUM
        {
            get { return _dIST_NUM; }
            set
            {
                if (_dIST_NUM != value)
                {
                    _dIST_NUM = value;
                    OnPropertyChanged("DIST_NUM");
                }
            }
        }
        private string _dIST_NUM;
    
        [DataMember]
        public string RUT_ID
        {
            get { return _rUT_ID; }
            set
            {
                if (_rUT_ID != value)
                {
                    _rUT_ID = value;
                    OnPropertyChanged("RUT_ID");
                }
            }
        }
        private string _rUT_ID;
    
        [DataMember]
        public string RUT_NAME
        {
            get { return _rUT_NAME; }
            set
            {
                if (_rUT_NAME != value)
                {
                    _rUT_NAME = value;
                    OnPropertyChanged("RUT_NAME");
                }
            }
        }
        private string _rUT_NAME;
    
        [DataMember]
        public string DIST_DATE
        {
            get { return _dIST_DATE; }
            set
            {
                if (_dIST_DATE != value)
                {
                    _dIST_DATE = value;
                    OnPropertyChanged("DIST_DATE");
                }
            }
        }
        private string _dIST_DATE;
    
        [DataMember]
        public string DLVMAN_ID
        {
            get { return _dLVMAN_ID; }
            set
            {
                if (_dLVMAN_ID != value)
                {
                    _dLVMAN_ID = value;
                    OnPropertyChanged("DLVMAN_ID");
                }
            }
        }
        private string _dLVMAN_ID;
    
        [DataMember]
        public string DLVMAN_NAME
        {
            get { return _dLVMAN_NAME; }
            set
            {
                if (_dLVMAN_NAME != value)
                {
                    _dLVMAN_NAME = value;
                    OnPropertyChanged("DLVMAN_NAME");
                }
            }
        }
        private string _dLVMAN_NAME;
    
        [DataMember]
        public string DRIVER_ID
        {
            get { return _dRIVER_ID; }
            set
            {
                if (_dRIVER_ID != value)
                {
                    _dRIVER_ID = value;
                    OnPropertyChanged("DRIVER_ID");
                }
            }
        }
        private string _dRIVER_ID;
    
        [DataMember]
        public string DRIVER_NAME
        {
            get { return _dRIVER_NAME; }
            set
            {
                if (_dRIVER_NAME != value)
                {
                    _dRIVER_NAME = value;
                    OnPropertyChanged("DRIVER_NAME");
                }
            }
        }
        private string _dRIVER_NAME;
    
        [DataMember]
        public string CAR_ID
        {
            get { return _cAR_ID; }
            set
            {
                if (_cAR_ID != value)
                {
                    _cAR_ID = value;
                    OnPropertyChanged("CAR_ID");
                }
            }
        }
        private string _cAR_ID;
    
        [DataMember]
        public string CAR_LICENSE
        {
            get { return _cAR_LICENSE; }
            set
            {
                if (_cAR_LICENSE != value)
                {
                    _cAR_LICENSE = value;
                    OnPropertyChanged("CAR_LICENSE");
                }
            }
        }
        private string _cAR_LICENSE;
    
        [DataMember]
        public int DIST_CUST_SUM
        {
            get { return _dIST_CUST_SUM; }
            set
            {
                if (_dIST_CUST_SUM != value)
                {
                    _dIST_CUST_SUM = value;
                    OnPropertyChanged("DIST_CUST_SUM");
                }
            }
        }
        private int _dIST_CUST_SUM;
    
        [DataMember]
        public decimal QTY_BAR
        {
            get { return _qTY_BAR; }
            set
            {
                if (_qTY_BAR != value)
                {
                    _qTY_BAR = value;
                    OnPropertyChanged("QTY_BAR");
                }
            }
        }
        private decimal _qTY_BAR;
    
        [DataMember]
        public decimal AMT_SUM
        {
            get { return _aMT_SUM; }
            set
            {
                if (_aMT_SUM != value)
                {
                    _aMT_SUM = value;
                    OnPropertyChanged("AMT_SUM");
                }
            }
        }
        private decimal _aMT_SUM;
    
        [DataMember]
        public string STATUS
        {
            get { return _sTATUS; }
            set
            {
                if (_sTATUS != value)
                {
                    _sTATUS = value;
                    OnPropertyChanged("STATUS");
                }
            }
        }
        private string _sTATUS;
    
        [DataMember]
        public string IS_DOWNLOAD
        {
            get { return _iS_DOWNLOAD; }
            set
            {
                if (_iS_DOWNLOAD != value)
                {
                    _iS_DOWNLOAD = value;
                    OnPropertyChanged("IS_DOWNLOAD");
                }
            }
        }
        private string _iS_DOWNLOAD;
    
        [DataMember]
        public string IS_MRB
        {
            get { return _iS_MRB; }
            set
            {
                if (_iS_MRB != value)
                {
                    _iS_MRB = value;
                    OnPropertyChanged("IS_MRB");
                }
            }
        }
        private string _iS_MRB;
    
        [DataMember]
        public string DRIVER_CARD_ID
        {
            get { return _dRIVER_CARD_ID; }
            set
            {
                if (_dRIVER_CARD_ID != value)
                {
                    _dRIVER_CARD_ID = value;
                    OnPropertyChanged("DRIVER_CARD_ID");
                }
            }
        }
        private string _dRIVER_CARD_ID;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
