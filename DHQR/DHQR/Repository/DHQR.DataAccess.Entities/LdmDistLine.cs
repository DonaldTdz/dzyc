//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DHQR.DataAccess.Entities
{
    [DataContract(IsReference = true)]
    public partial class LdmDistLine: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region 基元属性
    
        [DataMember]
        public System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("属性“Id”是对象键的一部分，不可更改。仅当未跟踪对象或对象处于“已添加”状态时，才能对键属性进行更改。");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private System.Guid _id;
    
        [DataMember]
        public string DIST_NUM
        {
            get { return _dIST_NUM; }
            set
            {
                if (_dIST_NUM != value)
                {
                    _dIST_NUM = value;
                    OnPropertyChanged("DIST_NUM");
                }
            }
        }
        private string _dIST_NUM;
    
        [DataMember]
        public string CO_NUM
        {
            get { return _cO_NUM; }
            set
            {
                if (_cO_NUM != value)
                {
                    _cO_NUM = value;
                    OnPropertyChanged("CO_NUM");
                }
            }
        }
        private string _cO_NUM;
    
        [DataMember]
        public string CUST_ID
        {
            get { return _cUST_ID; }
            set
            {
                if (_cUST_ID != value)
                {
                    _cUST_ID = value;
                    OnPropertyChanged("CUST_ID");
                }
            }
        }
        private string _cUST_ID;
    
        [DataMember]
        public string CUST_CODE
        {
            get { return _cUST_CODE; }
            set
            {
                if (_cUST_CODE != value)
                {
                    _cUST_CODE = value;
                    OnPropertyChanged("CUST_CODE");
                }
            }
        }
        private string _cUST_CODE;
    
        [DataMember]
        public string CUST_NAME
        {
            get { return _cUST_NAME; }
            set
            {
                if (_cUST_NAME != value)
                {
                    _cUST_NAME = value;
                    OnPropertyChanged("CUST_NAME");
                }
            }
        }
        private string _cUST_NAME;
    
        [DataMember]
        public string MANAGER
        {
            get { return _mANAGER; }
            set
            {
                if (_mANAGER != value)
                {
                    _mANAGER = value;
                    OnPropertyChanged("MANAGER");
                }
            }
        }
        private string _mANAGER;
    
        [DataMember]
        public string ADDR
        {
            get { return _aDDR; }
            set
            {
                if (_aDDR != value)
                {
                    _aDDR = value;
                    OnPropertyChanged("ADDR");
                }
            }
        }
        private string _aDDR;
    
        [DataMember]
        public string TEL
        {
            get { return _tEL; }
            set
            {
                if (_tEL != value)
                {
                    _tEL = value;
                    OnPropertyChanged("TEL");
                }
            }
        }
        private string _tEL;
    
        [DataMember]
        public decimal QTY_BAR
        {
            get { return _qTY_BAR; }
            set
            {
                if (_qTY_BAR != value)
                {
                    _qTY_BAR = value;
                    OnPropertyChanged("QTY_BAR");
                }
            }
        }
        private decimal _qTY_BAR;
    
        [DataMember]
        public decimal AMT_AR
        {
            get { return _aMT_AR; }
            set
            {
                if (_aMT_AR != value)
                {
                    _aMT_AR = value;
                    OnPropertyChanged("AMT_AR");
                }
            }
        }
        private decimal _aMT_AR;
    
        [DataMember]
        public decimal AMT_OR
        {
            get { return _aMT_OR; }
            set
            {
                if (_aMT_OR != value)
                {
                    _aMT_OR = value;
                    OnPropertyChanged("AMT_OR");
                }
            }
        }
        private decimal _aMT_OR;
    
        [DataMember]
        public string PMT_STATUS
        {
            get { return _pMT_STATUS; }
            set
            {
                if (_pMT_STATUS != value)
                {
                    _pMT_STATUS = value;
                    OnPropertyChanged("PMT_STATUS");
                }
            }
        }
        private string _pMT_STATUS;
    
        [DataMember]
        public string TYPE
        {
            get { return _tYPE; }
            set
            {
                if (_tYPE != value)
                {
                    _tYPE = value;
                    OnPropertyChanged("TYPE");
                }
            }
        }
        private string _tYPE;
    
        [DataMember]
        public int SEQ
        {
            get { return _sEQ; }
            set
            {
                if (_sEQ != value)
                {
                    _sEQ = value;
                    OnPropertyChanged("SEQ");
                }
            }
        }
        private int _sEQ;
    
        [DataMember]
        public string LICENSE_CODE
        {
            get { return _lICENSE_CODE; }
            set
            {
                if (_lICENSE_CODE != value)
                {
                    _lICENSE_CODE = value;
                    OnPropertyChanged("LICENSE_CODE");
                }
            }
        }
        private string _lICENSE_CODE;
    
        [DataMember]
        public string PAY_TYPE
        {
            get { return _pAY_TYPE; }
            set
            {
                if (_pAY_TYPE != value)
                {
                    _pAY_TYPE = value;
                    OnPropertyChanged("PAY_TYPE");
                }
            }
        }
        private string _pAY_TYPE;
    
        [DataMember]
        public Nullable<decimal> LONGITUDE
        {
            get { return _lONGITUDE; }
            set
            {
                if (_lONGITUDE != value)
                {
                    _lONGITUDE = value;
                    OnPropertyChanged("LONGITUDE");
                }
            }
        }
        private Nullable<decimal> _lONGITUDE;
    
        [DataMember]
        public Nullable<decimal> LATITUDE
        {
            get { return _lATITUDE; }
            set
            {
                if (_lATITUDE != value)
                {
                    _lATITUDE = value;
                    OnPropertyChanged("LATITUDE");
                }
            }
        }
        private Nullable<decimal> _lATITUDE;
    
        [DataMember]
        public string CUST_CARD_ID
        {
            get { return _cUST_CARD_ID; }
            set
            {
                if (_cUST_CARD_ID != value)
                {
                    _cUST_CARD_ID = value;
                    OnPropertyChanged("CUST_CARD_ID");
                }
            }
        }
        private string _cUST_CARD_ID;
    
        [DataMember]
        public string CUST_CARD_CODE
        {
            get { return _cUST_CARD_CODE; }
            set
            {
                if (_cUST_CARD_CODE != value)
                {
                    _cUST_CARD_CODE = value;
                    OnPropertyChanged("CUST_CARD_CODE");
                }
            }
        }
        private string _cUST_CARD_CODE;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
