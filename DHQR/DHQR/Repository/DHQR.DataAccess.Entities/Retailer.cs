//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DHQR.DataAccess.Entities
{
    [DataContract(IsReference = true)]
    public partial class Retailer: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region 基元属性
    
        [DataMember]
        public System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("属性“Id”是对象键的一部分，不可更改。仅当未跟踪对象或对象处于“已添加”状态时，才能对键属性进行更改。");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private System.Guid _id;
    
        [DataMember]
        public string CUST_ID
        {
            get { return _cUST_ID; }
            set
            {
                if (_cUST_ID != value)
                {
                    _cUST_ID = value;
                    OnPropertyChanged("CUST_ID");
                }
            }
        }
        private string _cUST_ID;
    
        [DataMember]
        public string CUST_NAME
        {
            get { return _cUST_NAME; }
            set
            {
                if (_cUST_NAME != value)
                {
                    _cUST_NAME = value;
                    OnPropertyChanged("CUST_NAME");
                }
            }
        }
        private string _cUST_NAME;
    
        [DataMember]
        public string LICENSE_CODE
        {
            get { return _lICENSE_CODE; }
            set
            {
                if (_lICENSE_CODE != value)
                {
                    _lICENSE_CODE = value;
                    OnPropertyChanged("LICENSE_CODE");
                }
            }
        }
        private string _lICENSE_CODE;
    
        [DataMember]
        public string STATUS
        {
            get { return _sTATUS; }
            set
            {
                if (_sTATUS != value)
                {
                    _sTATUS = value;
                    OnPropertyChanged("STATUS");
                }
            }
        }
        private string _sTATUS;
    
        [DataMember]
        public string COM_ID
        {
            get { return _cOM_ID; }
            set
            {
                if (_cOM_ID != value)
                {
                    _cOM_ID = value;
                    OnPropertyChanged("COM_ID");
                }
            }
        }
        private string _cOM_ID;
    
        [DataMember]
        public string PSW
        {
            get { return _pSW; }
            set
            {
                if (_pSW != value)
                {
                    _pSW = value;
                    OnPropertyChanged("PSW");
                }
            }
        }
        private string _pSW;
    
        [DataMember]
        public Nullable<decimal> LONGITUDE
        {
            get { return _lONGITUDE; }
            set
            {
                if (_lONGITUDE != value)
                {
                    _lONGITUDE = value;
                    OnPropertyChanged("LONGITUDE");
                }
            }
        }
        private Nullable<decimal> _lONGITUDE;
    
        [DataMember]
        public Nullable<decimal> LATITUDE
        {
            get { return _lATITUDE; }
            set
            {
                if (_lATITUDE != value)
                {
                    _lATITUDE = value;
                    OnPropertyChanged("LATITUDE");
                }
            }
        }
        private Nullable<decimal> _lATITUDE;
    
        [DataMember]
        public string Address
        {
            get { return _address; }
            set
            {
                if (_address != value)
                {
                    _address = value;
                    OnPropertyChanged("Address");
                }
            }
        }
        private string _address;
    
        [DataMember]
        public string ProvinceAndCity
        {
            get { return _provinceAndCity; }
            set
            {
                if (_provinceAndCity != value)
                {
                    _provinceAndCity = value;
                    OnPropertyChanged("ProvinceAndCity");
                }
            }
        }
        private string _provinceAndCity;
    
        [DataMember]
        public string AreaCode
        {
            get { return _areaCode; }
            set
            {
                if (_areaCode != value)
                {
                    _areaCode = value;
                    OnPropertyChanged("AreaCode");
                }
            }
        }
        private string _areaCode;
    
        [DataMember]
        public string RecieveType
        {
            get { return _recieveType; }
            set
            {
                if (_recieveType != value)
                {
                    _recieveType = value;
                    OnPropertyChanged("RecieveType");
                }
            }
        }
        private string _recieveType;
    
        [DataMember]
        public string RecieveTypeName
        {
            get { return _recieveTypeName; }
            set
            {
                if (_recieveTypeName != value)
                {
                    _recieveTypeName = value;
                    OnPropertyChanged("RecieveTypeName");
                }
            }
        }
        private string _recieveTypeName;
    
        [DataMember]
        public string CARD_ID
        {
            get { return _cARD_ID; }
            set
            {
                if (_cARD_ID != value)
                {
                    _cARD_ID = value;
                    OnPropertyChanged("CARD_ID");
                }
            }
        }
        private string _cARD_ID;
    
        [DataMember]
        public string CARD_CODE
        {
            get { return _cARD_CODE; }
            set
            {
                if (_cARD_CODE != value)
                {
                    _cARD_CODE = value;
                    OnPropertyChanged("CARD_CODE");
                }
            }
        }
        private string _cARD_CODE;
    
        [DataMember]
        public string ORDER_TEL
        {
            get { return _oRDER_TEL; }
            set
            {
                if (_oRDER_TEL != value)
                {
                    _oRDER_TEL = value;
                    OnPropertyChanged("ORDER_TEL");
                }
            }
        }
        private string _oRDER_TEL;
    
        [DataMember]
        public string BUSI_ADDR
        {
            get { return _bUSI_ADDR; }
            set
            {
                if (_bUSI_ADDR != value)
                {
                    _bUSI_ADDR = value;
                    OnPropertyChanged("BUSI_ADDR");
                }
            }
        }
        private string _bUSI_ADDR;
    
        [DataMember]
        public string RUT_ID
        {
            get { return _rUT_ID; }
            set
            {
                if (_rUT_ID != value)
                {
                    _rUT_ID = value;
                    OnPropertyChanged("RUT_ID");
                }
            }
        }
        private string _rUT_ID;
    
        [DataMember]
        public string OR_LICENSE_CODE
        {
            get { return _oR_LICENSE_CODE; }
            set
            {
                if (_oR_LICENSE_CODE != value)
                {
                    _oR_LICENSE_CODE = value;
                    OnPropertyChanged("OR_LICENSE_CODE");
                }
            }
        }
        private string _oR_LICENSE_CODE;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
